"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
const bignumber_1 = require("@ethersproject/bignumber");
const __1 = require("../../../..");
// Cost for crossing an uninitialized tick.
exports.COST_PER_UNINIT_TICK = bignumber_1.BigNumber.from(0);
//l2 execution fee on optimism is roughly the same as mainnet
const BASE_SWAP_COST = (id) => {
    switch (id) {
        case __1.ChainId.MAINNET:
        case __1.ChainId.ROPSTEN:
        case __1.ChainId.RINKEBY:
        case __1.ChainId.GÖRLI:
        case __1.ChainId.OPTIMISM:
        case __1.ChainId.OPTIMISTIC_KOVAN:
        case __1.ChainId.KOVAN:
            return bignumber_1.BigNumber.from(2000);
        case __1.ChainId.ARBITRUM_ONE:
        case __1.ChainId.ARBITRUM_RINKEBY:
        case __1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(5000);
        case __1.ChainId.POLYGON:
        case __1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(2000);
        case __1.ChainId.CELO:
        case __1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(2000);
        //TODO determine if sufficient
        case __1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(2000);
        case __1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(2000);
        default:
            throw new Error(`Unknown chain id: ${id}`);
    }
};
exports.BASE_SWAP_COST = BASE_SWAP_COST;
const COST_PER_INIT_TICK = (id) => {
    switch (id) {
        case __1.ChainId.MAINNET:
        case __1.ChainId.ROPSTEN:
        case __1.ChainId.RINKEBY:
        case __1.ChainId.GÖRLI:
        case __1.ChainId.KOVAN:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.OPTIMISM:
        case __1.ChainId.OPTIMISTIC_KOVAN:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.ARBITRUM_ONE:
        case __1.ChainId.ARBITRUM_RINKEBY:
        case __1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.POLYGON:
        case __1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.CELO:
        case __1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(31000);
        case __1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(31000);
        default:
            throw new Error(`Unknown chain id: ${id}`);
    }
};
exports.COST_PER_INIT_TICK = COST_PER_INIT_TICK;
const COST_PER_HOP = (id) => {
    switch (id) {
        case __1.ChainId.MAINNET:
        case __1.ChainId.ROPSTEN:
        case __1.ChainId.RINKEBY:
        case __1.ChainId.GÖRLI:
        case __1.ChainId.KOVAN:
        case __1.ChainId.OPTIMISM:
        case __1.ChainId.OPTIMISTIC_KOVAN:
            return bignumber_1.BigNumber.from(80000);
        case __1.ChainId.ARBITRUM_ONE:
        case __1.ChainId.ARBITRUM_RINKEBY:
        case __1.ChainId.ARBITRUM_GOERLI:
            return bignumber_1.BigNumber.from(80000);
        case __1.ChainId.POLYGON:
        case __1.ChainId.POLYGON_MUMBAI:
            return bignumber_1.BigNumber.from(80000);
        case __1.ChainId.CELO:
        case __1.ChainId.CELO_ALFAJORES:
            return bignumber_1.BigNumber.from(80000);
        case __1.ChainId.GNOSIS:
            return bignumber_1.BigNumber.from(80000);
        case __1.ChainId.MOONBEAM:
            return bignumber_1.BigNumber.from(80000);
        default:
            throw new Error(`Unknown chain id: ${id}`);
    }
};
exports.COST_PER_HOP = COST_PER_HOP;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUVyRCxtQ0FBc0M7QUFFdEMsMkNBQTJDO0FBQzlCLFFBQUEsb0JBQW9CLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdEQsNkRBQTZEO0FBQ3RELE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBVyxFQUFhLEVBQUU7SUFDdkQsUUFBUSxFQUFFLEVBQUU7UUFDVixLQUFLLFdBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxXQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssV0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLFdBQU8sQ0FBQyxLQUFLLENBQUM7UUFDbkIsS0FBSyxXQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3RCLEtBQUssV0FBTyxDQUFDLGdCQUFnQixDQUFDO1FBQzlCLEtBQUssV0FBTyxDQUFDLEtBQUs7WUFDaEIsT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixLQUFLLFdBQU8sQ0FBQyxZQUFZLENBQUM7UUFDMUIsS0FBSyxXQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDOUIsS0FBSyxXQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLHFCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLEtBQUssV0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLFdBQU8sQ0FBQyxjQUFjO1lBQ3pCLE9BQU8scUJBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFOUIsS0FBSyxXQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssV0FBTyxDQUFDLGNBQWM7WUFDekIsT0FB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